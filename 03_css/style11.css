.container{
    width: 300px;
    height: 400px;
    background-color: #333;
    /* margin을 통한 가운데 정렬 */
    /* width 정의 되어 있어야 함 */
    margin: 0 auto;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: baseline;
    flex-wrap:wrap-reverse;
    align-content: space-evenly; 


    /* 부모 요소에 flex 선언 시 아이템(자식) 이 가로 방향으로 배치 됨 */

    /* 
    flexbox 기본 용어
        - 주축(main axis): item의 배치 방향
        - 교차축(cross axis) : 주축의 수직 축
    */

    /* flex-direction: flex 방향 설정(주축 방향 설정)
        - row (default) : 수평 정렬(좌 -> 우)
        - row-reverse: 수평 정렬 (우 -> 좌)
        - column: 수직 정렬(위 -> 아래)
        - column-reverse: 수직 정렬(아래 -> 위)
    */

    /* row일 때 */
    /* flex-direction: row; */
    /* flex-direction: row-reverse; */
    /* column일 때 */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /* justify-content : 주축 아이템 어떻게 배치할 것인가? */
        /* - flex-direction이 수평 정렬: 주축 = row
           - flex-direction이 수직 정렬: 주축 = col */
           
           /* justify-content: flex-start; */
           /* justify-content: flex-end; */
           /* justify-content: space-between;
           /* justify-content: space-around; */
           /* justify-content: space-evenly; */
       
           /* - flex-start (default): 아이템을 주축에 대해서 start지점을 기준으로 나열 
           - flex-end: 아이템을 주축에 대해서 end 지점을 기준으로 나열
           - space-between: 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 영역 공평하게 나눔 (가장 많이 쓰임)
           - space-around: 아이템들의 모든 여백을 공평하게 갖도록 함 (양끝 영역의 단위가 1이라면, 나머지 영역의 단위는 2)
           - space-evenly: start부터 첫 아이템의 간격, 아이템 끼리의 간격, 마지막 아이템 부터 end 까지의 모든 간격이 일정 (처음, 끝에 안 붙음)
        */

    
    /* align-items: 교차축에 대해서 아이템을 어떻게 배치할 것인가? */
        /* - flex-direction이 수평 정렬: 교차축 = col
           - flex-direction이 수직 정렬: 교차축 = row */

        /* align-items: stretch
        /* align-items: flex-start */
        /* align-items: flex-end */
        /* align-items: center;
        /* align-items: baseline 

        /* - stretch (default): container의 교차축을 채우기 위해 늘림
        - 현재 .flex-items 에 width, height 값이 있어 늘어나지는 않음
        - flex-start: 교차축에 대하여 시작점으로 정렬
        - flex-end: 교차축에 대하여 끝점으로 정렬
        - center: 교차축에 대하여 가운데 정렬 (flex-direction : column이면 보통 많이 씀)
        - baseline: 아이템을 텍스트의 베이스라인(아래 선) 기준 정렬 */

    /* flex-wrap: 줄바꿈(개행) 처리 
        -> 컨테이너(부모)가 한 줄에 아이템 다 수용 못 할 때, 줄바꿈 관련 설정
        - nowrap(default): 줄바꿈 안 함 
        - wrap: 줄바꿈 함
        - wrap-reverse: 줄바꿈 하는데 아이템 역순 배치 */

        /* flex-wrap: nowrap */
        /* flex-wrap: wrap */
        /* flex-wrap: wrap-reverse */

    /* align-content: 여러 행에 대한 정렬
        (조건) flex-wrap: wrap/wrap-reverse 상태에서 아이템이 두 줄 이상일 때 수직축 방향 설정함 */
        /* align-content: stretch; */
        /* align-content: flex-start; */
        /* align-content: flex-end; */
        /* align-content: center; */
        /* align-content: space-between; */
        /* align-content: space-around; */
        /* align-content: space-evenly; */
}

.items{
    width: 100px;
    height: 100px;
    font-size: 20px;
    text-align: center;
    /* 줄 높이를 width와 같이 두기 => 글자 세로 가운데 정렬 */
    /* line-height: 100px; */
}
.item1{
    background-color: aliceblue;
}
.item2{
    background-color: aqua;
}
.item3{
    background-color: palegoldenrod;
}
.item4{
    background-color: palegreen;
}
.item5{
    background-color: palevioletred;
}

/* div 안에 div 정가운데 정렬 */
.outer{
    width: 300px;
    height: 300px;
    background-color: aqua;
}
.inner{
    width: 100px;
    height: 100px;
    background-color: pink;
}

/* ver1. position, transform */
.outer1{
    position: relative; 
    /* 자식 요소에 absolute 쓰려고 position 지정함 */
}
.inner1{
    position: absolute;
    top:50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* 자신 크기의 절반만큼 - 방향 이동 */
}

/* ver2. flex */
.outer2{
    display: flex;
    /* flex-direction: column; 줘도 되고 안 줘도 됨 */
    justify-content: center;
    align-items: center;
}
.box{
    background-color: cyan;
    width: 100px;
    height: 100px;
    /* 자기가 있어야 하는 위치 기준 동작 */
    position: relative;
    /* animation-name: myAnimation; */
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-delay: 2s;
    animation-timing-function: linear;
}
.bounce-ball1{
    position: relative;
    left: 100px;
    top: 200px;
    background-color: palegreen;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    animation: bounce1 1s ease-out none infinite alternate ;
}
.bounce-ball2{
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: hotpink;
    /* 브라우저(body) 기준 동작 */
    position: absolute;
    animation-name: bounce2;
    animation-duration: 2s;
    animation-iteration-count: infinite;
}

/*  - animation-name: @keyframes 애니메이션 이름 지정
        - 시작: from or 0%
        - 중간: 0~100%
        - 끝: to or 100%
    - animation-duration: 한 사이클의 애니메이션이 얼마에 걸쳐 일어날지 결정 (단위: s)
    - animation-delay: 요소(element)가 로드된 후, 언제 애니메이션을 시작할지 결정 (단위: s)
    - animation-iteration-count: 애니메이션 반복 횟수 (default: 1, infinite: 무한 반복)
    - animation-timing-function: 중간 상태들의 전환을 어떤 시간 간격으로 진행할지 지정
    - linear, ease, ease-in, ease-out, ease-in-out 등
    - animation-direction: 애니메이션 종류 후 반복될 때 진행방향 지정
    - normal, reverse(반대 방향), alternate(반복될때마다 방향 바꿔줌), alternate-reverse 
    - alternate: from -> to 방향으로 애니메이션 진행 -> (다음 회차) to -> from 방향을 바꿔가며 반복 
*/

@keyframes myAnimation {
    0%{
        left: 0px;
    }
    25%{
        left: 200px;
    }
    50%{
        left: 400px;
        
    }
    75%{
        left: 200px;
    }
    100%{
        left: 0px;
    }
}

@keyframes bounce1 {
    from{
        top: 300px;
    }
    to{
        top: 50px;
    }

}

@keyframes bounce2 {
    from,to{
        bottom: 0px;
        animation-timing-function: ease-out;
    /* 0px에서 정상속도로 시작 -> 속도 줄이며 300px 됨 */
    } 
    50%{
        bottom: 300px;
        animation-timing-function: ease-in;
    /* 300px에서 천천히 시작 -> 0px로 가며서 정상속도로 끝 */
    }
    
}